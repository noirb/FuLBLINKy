#version 330 core
layout(origin_upper_left) in vec4 gl_FragCoord;
varying float scalarValue;

uniform vec4  hotColor;
uniform vec4  coldColor;
uniform float max_scalar;
uniform float min_scalar;
uniform float bias;
uniform int   interpolator;

out vec4 color;

void main()
{
    float a;
    if (min_scalar == max_scalar)
    {
        a = max_scalar;
    }
    else
    {
        a = (scalarValue - min_scalar) / (max_scalar - min_scalar);
    }

    switch (interpolator)
    {
        case 0: // straight linear interpolation
            color = mix(coldColor, hotColor, a);
            break;
        case 1: // eased interpolation
            color = mix(coldColor, hotColor, smoothstep(0.0, 1.0, a));
            break;
        case 2: // exponential interpolation
            color = mix(coldColor, hotColor, a / (1.0 + bias * (1.0 - a)) );
            break;
    }
}
